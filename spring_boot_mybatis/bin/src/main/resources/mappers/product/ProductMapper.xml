<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.spring_boot_mybatis.project.dao.IProductDAO">
  	<resultMap id="prdResult" type="com.spring_boot_mybatis.project.model.ProductVO" >
  		<result property="prdNo" column="prdNo"/>
  		<result property="prdName" column="prdName"/>
  		<result property="prdPrice" column="prdPrice"/>
  		<result property="prdCompany" column="prdCompany"/>
  		<result property="prdStock" column="prdStock"/>
  		<result property="prdDate" column="prdDate"/>
  	</resultMap>
  
  <!--전체 상품 조회-->
  <!--주의 : id는 IProductDAO의 listAllProduct()메소드 이름과 동일해야 함-->
  <select id="listAllProduct" resultMap="prdResult">
  	SELECT * FROM product ORDER BY prdNo
  </select>
  <!-- <select id="listAllProduct" resultMap="prdResult">
  	<![CDATA[
  		SELECT * FROM product WHERE prdPrice>=1000000 ORDER BY prdNo
  	]]>
  </select> -->
  
  <!--상품 등록-->
  <insert id="insertProduct" parameterType="com.spring_boot_mybatis.project.model.ProductVO">
  	INSERT INTO product(prdNo, prdName, prdPrice, prdCompany, prdStock, prdDate)
  	VALUES(#{prdNo}, #{prdName}, #{prdPrice}, #{prdCompany}, #{prdStock}, #{prdDate})
  </insert>
  
  <!--상품 상세 정보 조회 : 상품 1개 조회-->
  <select id="detailViewProduct" parameterType="String"
  								 resultType="com.spring_boot_mybatis.project.model.ProductVO">
  	SELECT * FROM product WHERE prdNo=#{prdNo}
  </select>
  
  <!--상품 정보 수정-->
  <update id="updateProduct" parameterType="com.spring_boot_mybatis.project.model.ProductVO">
  	UPDATE product
  	SET prdName=#{prdName}, prdPrice=#{prdPrice}, prdCompany=#{prdCompany}, prdStock=#{prdStock}, prdDate=#{prdDate}
  	WHERE prdNo=#{prdNo}
  </update>
  
  <!--상품 정보 삭제-->
  <delete id="deleteProduct" parameterType="String">
  	DELETE FROM product WHERE prdNo=#{prdNo} 
  </delete>
  
  <!--상품번호 중복 확인-->
  <select id="prdNoCheck" parameterType="string" resultType="string">
  		SELECT prdNo FROM product WHERE prdNo=#{prdNo}
  </select>
  
  <!-- 상품 검색 -->
  <select id="productSearch" parameterType="hashmap" resultMap="prdResult">
  		SELECT * FROM product WHERE
  		<choose>
  			<when test="type != null and type.equals('prdName')">
  				prdName LIKE CONCAT('%', #{keyword}, '%')
  			</when>
  			<when test="type != null and type.equals('prdCompany')">
  				prdCompany LIKE CONCAT('%', #{keyword}, '%')
  			</when>
  		</choose>
  </select>
  
  </mapper>
  
  
  
  
  
  
  
  
  
  
  